# Dockerfile for building a layer from ReadyToRun binaries from GitLab
#

FROM ubuntu:latest AS builder
ARG TRACER_VERSION
ARG ARCH

# make the args mandatory
RUN : "${TRACER_VERSION:?TRACER_VERSION needs to be provided}"
RUN : "${ARCH:?ARCH needs to be provided}"

RUN apt-get update && \
    apt-get install -y zip curl

WORKDIR /opt

COPY artifacts artifacts

# Copy artifacts from the GitLab runner
RUN if [ "${ARCH}" = "amd64"]; then \
    arch_path="x64"; else \
    arch_path="arm64"; \
  fi && cp -r artifacts/${arch_path}/* datadog

# remove some useless files in a serverless context to keep the package as small as possible
RUN rm -f datadog/createLogPath.sh && \
    rm -f datadog/*.so && \
    rm -f datadog/loader.conf && \
    rm -f datadog/**/loader.conf && \
    rm -f datadog/**/libddwaf.so && \
    rm -f datadog/**/Datadog.Trace.ClrProfiler.Native.so && \
    rm -f datadog/**/Datadog.Linux.ApiWrapper.x64.so && \
    rm -f datadog/**/Datadog.Profiler.Native.so && \
    rm -f datadog/**/Datadog.Trace.MSBuild.* && \
    rm -f datadog/**/*.pdb && \
    rm -f datadog/**/*.xml && \
    rm -f datadog/dd-dotnet.sh && \
    rm -f datadog/**/dd-dotnet && \
    rm -rf datadog/netstandard2.0 && \
    rm -rf datadog/netcoreapp3.1 && \
    rm -rf datadog/continuousprofiler

# HACK: rename the tracer library so the logic in datadog_wrapper keeps working
# See also https://github.com/DataDog/datadog-lambda-extension/pull/150
RUN if [ -f datadog/linux-x64/Datadog.Tracer.Native.so ]; then mv datadog/linux-x64/Datadog.Tracer.Native.so datadog/linux-x64/Datadog.Trace.ClrProfiler.Native.so; fi
RUN if [ -f datadog/linux-arm64/Datadog.Tracer.Native.so ]; then mv datadog/linux-arm64/Datadog.Tracer.Native.so datadog/linux-arm64/Datadog.Trace.ClrProfiler.Native.so; fi

# add file with tracer version
RUN echo ${TRACER_VERSION} > datadog/tracer_version.txt

# zip the layer
RUN mkdir /datadog
RUN zip -r -9 /datadog/dd_trace_dotnet.zip datadog

# keep the smallest possible docker image
FROM scratch
COPY --from=builder /datadog/dd_trace_dotnet.zip /
ENTRYPOINT ["/dd_trace_dotnet.zip"]
